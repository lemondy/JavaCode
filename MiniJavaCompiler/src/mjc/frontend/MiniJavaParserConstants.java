/* Generated By:JavaCC: Do not edit this line. MiniJavaParserConstants.java */
package mjc.frontend;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 9;
  /** RegularExpression Id. */
  int PUBLIC = 10;
  /** RegularExpression Id. */
  int STATIC = 11;
  /** RegularExpression Id. */
  int VOID = 12;
  /** RegularExpression Id. */
  int MAIN = 13;
  /** RegularExpression Id. */
  int EXTENDS = 14;
  /** RegularExpression Id. */
  int RETURN = 15;
  /** RegularExpression Id. */
  int THIS = 16;
  /** RegularExpression Id. */
  int NEW = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int FOR = 20;
  /** RegularExpression Id. */
  int LENGTH = 21;
  /** RegularExpression Id. */
  int INT = 22;
  /** RegularExpression Id. */
  int LONG = 23;
  /** RegularExpression Id. */
  int NUM = 24;
  /** RegularExpression Id. */
  int BOOLEAN = 25;
  /** RegularExpression Id. */
  int TRUE = 26;
  /** RegularExpression Id. */
  int FALSE = 27;
  /** RegularExpression Id. */
  int SEMI = 28;
  /** RegularExpression Id. */
  int ELSE = 29;
  /** RegularExpression Id. */
  int ASSIGN = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int LT = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int TIMES = 35;
  /** RegularExpression Id. */
  int OR = 36;
  /** RegularExpression Id. */
  int LE = 37;
  /** RegularExpression Id. */
  int GT = 38;
  /** RegularExpression Id. */
  int GE = 39;
  /** RegularExpression Id. */
  int EQ = 40;
  /** RegularExpression Id. */
  int NE = 41;
  /** RegularExpression Id. */
  int LPAR = 42;
  /** RegularExpression Id. */
  int RPAR = 43;
  /** RegularExpression Id. */
  int STRING = 44;
  /** RegularExpression Id. */
  int ID = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int INSIDE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"/*\"",
    "<token of kind 6>",
    "\"*/\"",
    "<token of kind 8>",
    "\"class \"",
    "\"public \"",
    "\"static \"",
    "\"void\"",
    "\"main\"",
    "\"extends\"",
    "\"return \"",
    "\"this\"",
    "\"new \"",
    "\"while\"",
    "\"if\"",
    "\"for\"",
    "\".length\"",
    "\"int\"",
    "\"long \"",
    "<NUM>",
    "\"boolean \"",
    "\"true\"",
    "\"false\"",
    "\";\"",
    "\"else\"",
    "\"=\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"||\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "\"String\"",
    "<ID>",
    "\"{\"",
    "\"[\"",
    "\"]\"",
    "\"}\"",
    "\",\"",
    "\"System.out.println\"",
    "\".\"",
    "\"!\"",
  };

}

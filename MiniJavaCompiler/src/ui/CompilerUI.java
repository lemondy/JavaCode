/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import message.CompileMessage;
import mjc.JVMMain;

/**
 *
 * @author lemon
 */
public class CompilerUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public CompilerUI() {
		// TODO Auto-generated constructor stub
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        codeViewArea = new javax.swing.JTextArea();
        console = new javax.swing.JTabbedPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        consoleArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        closeMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        EditMenu = new javax.swing.JMenu();
        ExecuteMenu = new javax.swing.JMenu();
        compileMenuItem = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jTabbedPane1.addTab("console", jTabbedPane2);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("compiler");
        setLocationByPlatform(true);

        codeViewArea.setEditable(false);
        codeViewArea.setColumns(20);
        codeViewArea.setRows(5);
        jScrollPane1.setViewportView(codeViewArea);

        consoleArea.setColumns(20);
        consoleArea.setRows(5);
        jScrollPane6.setViewportView(consoleArea);

        console.addTab("console", jScrollPane6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(console, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(console, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        console.getAccessibleContext().setAccessibleName("console");

        FileMenu.setText("File");

        openMenuItem.setText("open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(openMenuItem);

        saveMenuItem.setText("save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(saveMenuItem);

        closeMenuItem.setText("close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(closeMenuItem);

        exitMenuItem.setText("exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        FileMenu.add(exitMenuItem);

        jMenuBar1.add(FileMenu);

        EditMenu.setText("Edit");
        jMenuBar1.add(EditMenu);

        ExecuteMenu.setText("execute");

        compileMenuItem.setText("compile");
        compileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compileMenuItemActionPerformed(evt);
            }
        });
        ExecuteMenu.add(compileMenuItem);

        jMenuBar1.add(ExecuteMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        try {
            // TODO add your handling code here:
            //when someone click the item it will open a dialog through which programmer can choose a file to open a the
            //below area
            parseDir = new javax.swing.JFileChooser();
            parseDir.showDialog(null, null);
            codeFile = parseDir.getSelectedFile();
            fileStream = new java.io.FileInputStream(codeFile);
            //customize the charset avoid to read chainese can't display correctly
            readCodeFromFile = new java.io.BufferedReader(new java.io.InputStreamReader(fileStream,"gb2312"));
           // readCodeFromFile = new java.io.BufferedReader(new java.io.FileReader(codeFile));
            //display the information  from the file  at below textarea
            String line = readCodeFromFile.readLine();
            codeViewArea.setFont(new java.awt.Font(null,java.awt.Font.BOLD,16));
            while(line != null){
                //line= new String(line.getBytes("UTF-8"));
              //  System.out.println(line);
                codeViewArea.append(line + "\n");
                //the following sentence is used to update the textarea immediate
                codeViewArea.paintImmediately(codeViewArea.getBounds());
                line = readCodeFromFile.readLine();
            }
            codeViewArea.setEditable(true);
            //close the stream
            readCodeFromFile.close();
        }catch(Exception e){
            //do something to deal with exception
        }
        
    }                                            

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        //this action is aimed to save the data to the file
        try{
            System.out.println(codeFile.toString());
        writeCode = new java.io.FileOutputStream(codeFile);
        writeCodeToFile = new java.io.BufferedWriter(new java.io.OutputStreamWriter(writeCode));
        
        String code = codeViewArea.getText();
        String[] oneLineCode = code.split("\n");
        
       /* for(String str:oneLineCode)
            System.out.println("@@@@@@@"+str);
        */
        for(String line:oneLineCode){
            writeCodeToFile.write(line, 0, line.length());
            writeCodeToFile.newLine();
        }
        
        writeCodeToFile.close();
        writeCode.close();
        }catch(Exception e){
            //do something
        }
    }                                            

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
         //positive save the file
        saveMenuItemActionPerformed(evt);
        //when someone click the close menu item , the set the codeview empty
        codeViewArea.setText("");
       
    }                                             

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        System.exit(0);
    }                                            


    private void compileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                                
    	// TODO add your handling code here:
    	new JVMMain(codeFile.toString());
    	new Thread(new Runnable() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				for(String str:CompileMessage.getCompileMessaage()){
					if(str == null)
						break; 
					consoleArea.append(str+"\n");
				}
			}
		}).start();
    } 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompilerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompilerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompilerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompilerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompilerUI().setVisible(true);
            }
        });
        
        /* get the compile information*/
        /*java.awt.EventQueue.invokeLater(new Runnable(){
        	public void run(){
        		while(!isClickCompileButton)
        			;
        		for(String str:CompileMessage.getCompileMessaage())
        			System.out.println(str);
        		
        	}
        });*/
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenu EditMenu;
    private javax.swing.JMenu ExecuteMenu;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JTextArea codeViewArea;
    private javax.swing.JMenuItem compileMenuItem;
    private javax.swing.JTabbedPane console;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea consoleArea;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration                   
    //define some variables by myself
    
    //parseDir is used to open a file dialog to read file
    private javax.swing.JFileChooser parseDir;
    private java.io.File codeFile;
    //read code from the file
    private java.io.FileInputStream fileStream;
    private java.io.BufferedReader readCodeFromFile;
    //write the code to the file when user choose the save menu item
    private java.io.FileOutputStream writeCode;
    private java.io.BufferedWriter writeCodeToFile;
   
    
}


